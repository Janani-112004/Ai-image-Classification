                                                                                                DOCUMENTATIONAL DETAILS

For Image Classification I used (CNN) to classify CIFAR images. Here by using the Keras Sequential API  the model is Tained and Created.

CNN:
       A Convolutional Neural Network (ConvNet/CNN) is a Deep Learning algorithm which can take in an input image, assign importance (learnable weights and biases) to various aspects/objects in the image and be able to differentiate one from the other. The pre-processing required in a ConvNet is much lower as compared to other classification algorithms. 

PROCEDURE:

1) In this Project First we want to Import Libraries in Jupyter Notebook or Google Collab.

2) Loading Data: 
                   The CIFAR10 dataset contains 60,000 color images in 10 classes, with 6,000 images in each class. The dataset is divided into 50,000 training images and 10,000 testing images. The classes are mutually exclusive and there is no overlap between them.

3) Create the convolutional base:
                    As input, a CNN takes tensors of shape (image_height,  mage_width,  olor_channels), ignoring the batch size. If we are new to these dimensions, color_channels refers to (R,G,B). In this example, we will Configure the CNN to process inputs of shape.
Add the Architectural Model.

4) Adding Dense layer on the top :
                     To complete the model we must feed the last output tensor from the convolutional base (of shape (4, 4, 64)) into one or more Dense layers to perform classification. Dense layers take vectors as input (which are 1D), while the current output is a 3D tensor. First, you will flatten (or unroll) the 3D output to 1D, then add one or more Dense layers on top.

5) Compile and train the model :
                          Train the Model using Adam Opimizer and Epoch.

6) Evaluate The Model :
                        Here simple CNN has achieved a test accuracy of over 70%, which is not bad.